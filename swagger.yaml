openapi: 3.0.0
info:
  title: Book Borrow and Return System API
  description: API for managing books, users, borrowing, and returning.
  version: 1.0.0
servers:
  - url: http://localhost:3000
tags:
  - name: Books
  - name: Categories
  - name: Authors
#  - name: manage fine
  - name: Types 
  - name: Borrow_Return
  - name: reports                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   

paths:
  /type:
    get:
      tags:
        - Types
      summary: ค้นหาข้อมูลประเภทการยืมหนังสือ
      operationId: getAlltype
      responses:
        '200':
          description: List of type
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "200"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "OK"
                  result:
                    type: object
                    properties:
                      pagination:
                        $ref: "#/components/schemas/pagination"
                      type:
                        type: array
                        items:
                          $ref: '#/components/schemas/type_details'
                      
        '404':
          description: No type found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "404"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "type not found"
    post:
      tags:
        - Types
      summary: เพิ่มข้อมูลประเภทการยืมหนังสือ
      operationId: addtype
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  maxLength: 10
                  example: "5984394"
                name_th:
                  type: string
                  maxLength: 255
                  example: "การศึกษา"
                name_en:
                  type: string
                  maxLength: 255
                  example: "Education"
                duration:
                  type: integer
                  example: 12


      responses:
        '201':
          description: type created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "201"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "type created successfully"
                  result:
                    $ref: '#/components/schemas/type_details'
        '400':
          description: Bad request, invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "400"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Invalid input data"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "500"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Internal server error"


  /type/{typeId}:
    get:
      tags:
        - Types
      summary: ค้นหาประเภทการยืมหนังสือจาก ID
      operationId: gettypeById
      parameters:
        - in: path
          name: typeId
          required: true
          description: ID of the type
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Get type by ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "200"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "OK"
                  result:
                    $ref: '#/components/schemas/type_details'
        '404':
          description: type not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "404"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "type not found"

    put:
      tags:
        - Types
      summary: อัปเดตข้อมูลการยืมหนังสือ
      operationId: updatetype
      parameters:
        - in: path
          name: typeId
          required: true
          description: ID of the type to update
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  maxLength: 10
                  example: "5984394"
                name_th:
                  type: string
                  maxLength: 255
                  example: "การศึกษา"
                name_en:
                  type: string
                  maxLength: 255
                  example: "Education"
                duration:
                  type: integer
                  example: 12

      responses:
        '200':
          description: type updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "200"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "type updated successfully"
                  result:
                    $ref: '#/components/schemas/type'
        '400':
          description: Bad request, invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "400"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Invalid input data"
        '404':
          description: type not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "404"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string 
                    example: "type not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "500"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Internal server error"
    patch:
      tags:
        - Types
      summary: อัปเดตข้อมูลการยืมหนังสือ (อัปเดตเฉพาะ status_flag)
      operationId: patchtype
      parameters:
        - in: path
          name: typeId
          required: true
          description: ID of the type to update
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status_flag:
                  type: string
                  example: "INACTIVE"
              required:
                - status_flag
      responses:
        '200':
          description: type status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "200"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "type status updated successfully"

    delete:
      tags:
        - Types
      summary: ลบข้อมูลการยืมหนังสือจาก ID
      operationId: deletetype
      parameters:
        - in: path
          name: typeId
          required: true
          description: ID of the type to delete
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: type deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "200"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "type deleted successfully"
        '404':
          description: type not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "404"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "type not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "500"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Internal server error"

  /authors:
    get:
      tags:
        - Authors
      summary: ค้นหาข้อมูลนักเขียน
      operationId: getAllauthors
      responses:
        '200':
          description: List of authors
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "200"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "OK"
                  result:
                    type: object
                    properties:
                      pagination:
                        $ref: "#/components/schemas/pagination"
                      author:
                        type: array
                        items:
                          $ref: '#/components/schemas/author_details'

    post:
      tags:
        - Authors
      summary: เพิ่มข้อมูลนักเขียน
      operationId: addauthor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name_th:
                  type: string
                  maxLength: 255
                  example: "สมชาย"
                name_en:
                  type: string
                  maxLength: 255
                  example: "Somchai"
                alias:
                  type: string
                  maxLength: 255
                  example: "somchai123"
      responses:
        '201':
          description: author created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "201"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "author created successfully"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "400"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Invalid input"

  /authors/{authorId}:
    get:
      tags:
        - Authors
      summary: เพิ่มข้อมูลนักเขียนจาก ID
      operationId: getauthorById
      parameters:
        - in: path
          name: authorId
          required: true
          description: ID of the author
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: author details
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "200"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "OK"
                  result:
                    $ref: '#/components/schemas/author_details'
        '404':
          description: author not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "404"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "author not found"

    put:
      tags:
        - Authors
      summary: อัปเดตข้อมูลนักเขียน
      operationId: updateauthor
      parameters:
        - in: path
          name: authorId
          required: true
          description: ID of the author
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name_th:
                  type: string
                  maxLength: 255
                  example: "สมชาย"
                name_en:
                  type: string
                  maxLength: 255
                  example: "Somchai"
                alias:
                  type: string
                  maxLength: 255
                  example: "somchai123"
      responses:
        '200':
          description: author updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "200"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "author updated successfully"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "400"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Invalid input"
        '404':
          description: author not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "404"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "author not found"

    patch:
      tags:
        - Authors
      summary: อัปเดตข้อมูลนักเขียน (อัปเดตเฉพาะ status_flag)
      operationId: patchauthor
      parameters:
        - in: path
          name: authorId
          required: true
          description: ID of the author
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status_flag:
                  type: string
                  example: "INACTIVE"
              required:
                - status_flag
      responses:
        '200':
          description: author status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "200"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "author status updated successfully"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "400"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Invalid input"
        '404':
          description: author not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "404"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "author not found"

    delete:
      tags:
        - Authors
      summary: ลบข้อมูลนักเขียนจาก ID
      operationId: deleteauthor
      parameters:
        - in: path
          name: authorId
          required: true
          description: ID of the author
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: author deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "200"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "author deleted successfully"
        '404':
          description: author not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "404"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "author not found"

  /fine:
    post:
      tags:
        - Borrow_Return
      summary: เพิ่มข้อมูลค่าปรับ
      operationId: addfine
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                values:
                  type: integer
                  example: 50
                br_id:
                  type: integer
                  example: 123
              
                
      responses:
        '201':
          description: fine created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "201"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "fine created successfully"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "400"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Invalid input"

  /fine/{fineId}:
    get:
      tags:
        - Borrow_Return
      summary: ค้นหาข้อมูลค่าปรับจาก ID
      operationId: getfineById
      parameters:
        - in: path
          name: fineId
          required: true
          description: ID of the fine
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: fine details
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "200"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "OK"
                  result:
                    $ref: '#/components/schemas/fine_details'
        '404':
          description: fine not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "404"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "fine not found"

    put:
      tags:
        - Borrow_Return
      summary: อัปเดตข้อมูลค่าปรับ
      operationId: updatefine
      parameters:
        - in: path
          name: fineId
          required: true
          description: ID of the fine
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                values:
                  type: integer
                  example: 50
                br_id:
                  type: integer
                  example: 123
      responses:
        '200':
          description: fine updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "200"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "fine updated successfully"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "400"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Invalid input"
        '404':
          description: fine not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "404"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "fine not found"

    patch:
      tags:
        - Borrow_Return
      summary: อัปเดตข้อมูลค่าปรับ (อัปเดตเฉพาะ status_flag)
      operationId: patchfine
      parameters:
        - in: path
          name: fineId
          required: true
          description: ID of the fine
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status_flag:
                  type: string
                  example: "INACTIVE"
              required:
                - status_flag
      responses:
        '200':
          description: fine status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "200"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "fine status updated successfully"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "400"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Invalid input"
        '404':
          description: fine not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "404"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "fine not found"

    delete:
      tags:
        - Borrow_Return
      summary: ลบข้อมูลค่าปรับจาก ID
      operationId: deletefine
      parameters:
        - in: path
          name: fineId
          required: true
          description: ID of the fine
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: fine deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "200"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "fine deleted successfully"
        '404':
          description: fine not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "404"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "fine not found"

  /books:
    get:
      tags:
        - Books
      summary: ค้นหาข้อมูลหนังสือทั้งหมด
      operationId: getAllBooks
      responses:
        '200':
          description: รายชื่อและข้อมูลของหนังสือ
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "200"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "OK"
                  result:
                    type: object
                    properties:
                      pagination:
                        $ref: "#/components/schemas/pagination"
                      books:
                        type: array
                        items:
                          $ref: '#/components/schemas/Books_details'

                      
    post:
      tags:
        - Books
      summary: เพิ่มหนังสือใหม่
      operationId: addBook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                code:
                  type: string
                  maxLength: 10
                  example: "BOOK1234"
                no:
                  type: integer
                  example: 1
                name_th:
                  type: string
                  maxLength: 255
                  example: "การเขียนโปรแกรม"
                name_en:
                  type: string
                  maxLength: 255
                  example: "Programming"
                edition:
                  type: integer
                  example: 2
                description:
                  type: string
                  example: "หนังสือเกี่ยวกับการเขียนโปรแกรม"
                abstract:
                  type: string
                  example: "เป็นหนังสือที่เกี่ยวข้องกับพื้นฐานการเขียนโปรแกรม"
                printerty:
                  type: string
                  example: "Printer A"
                prinerty_date:
                  type: string
                  format: date-time
                  example: "2024-12-01T00:00:00.000Z"
                maintenanced_date:
                  type: string
                  format: date-time
                  example: "2024-12-10T00:00:00.000Z"
                maintenanced_by:
                  type: string
                  example: "Admin"
                categories:
                    type: object
                    properties:
                      add:
                        type: array
                        items:
                          type: integer 
                        example: []
                      delete:
                        type: array
                        items:
                          type: integer 
                        example: []    
                type_id:
                  type: integer
                  example: 1
                author_id:
                  type: integer
                  example: 1

      responses:
        '201':
          description: Book created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "201"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "Book created successfully"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "400"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Invalid input"

  /books/{bookId}:
    get:
      tags:
        - Books
      summary: ค้นหาหนังสือจาก ID
      operationId: getBookById
      parameters:
        - in: path
          name: bookId
          required: true
          description: ID of the book
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Book details
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "200"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "OK"
                  result:
                    $ref: '#/components/schemas/Books_details'
        '404':
          description: Book not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "404"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Book not found"

    put:
      tags:
        - Books
      summary: อัปเดตข้อมูลหนังสือ
      operationId: updateBook
      parameters:
        - in: path
          name: bookId
          required: true
          description: ID of the book
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                code:
                  type: string
                  maxLength: 10
                  example: "BOOK1234"
                no:
                  type: integer
                  example: 1
                name_th:
                  type: string
                  maxLength: 255
                  example: "การเขียนโปรแกรม"
                name_en:
                  type: string
                  maxLength: 255
                  example: "Programming"
                edition:
                  type: integer
                  example: 2
                description:
                  type: string
                  example: "หนังสือเกี่ยวกับการเขียนโปรแกรม"
                abstract:
                  type: string
                  example: "เป็นหนังสือที่เกี่ยวข้องกับพื้นฐานการเขียนโปรแกรม"
                printerty:
                  type: string
                  example: "Printer A"
                prinerty_date:
                  type: string
                  format: date-time
                  example: "2024-12-01T00:00:00.000Z"
                maintenanced_date:
                  type: string
                  format: date-time
                  example: "2024-12-10T00:00:00.000Z"
                maintenanced_by:
                  type: string
                  example: "Admin"
                categories:
                    type: object
                    properties:
                      add:
                        type: array
                        items:
                          type: integer 
                        example: []
                      delete:
                        type: array
                        items:
                          type: integer 
                        example: [] 
                type_id:
                  type: integer
                  example: 1
                author_id:
                  type: integer
                  example: 1
      responses:
        '200':
          description: Book updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "200"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "Book updated successfully"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "400"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Invalid input"
        '404':
          description: Book not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "404"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Book not found"

    patch:
      tags:
        - Books
      summary: อัปเดตข้อมูลหนังสือ (อัปเดตเฉพาะ status_flag)
      operationId: patchBook
      parameters:
        - in: path
          name: bookId
          required: true
          description: ID of the book
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status_flag:
                  type: string
                  example: "INACTIVE"
              required:
                - status_flag
      responses:
        '200':
          description: book status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "200"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "book status updated successfully"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "400"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Invalid input"
        '404':
          description: Book not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "404"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Book not found"

    delete:
      tags:
        - Books
      summary: ลบข้อมูลหนังสือจาก ID
      operationId: deleteBook
      parameters:
        - in: path
          name: bookId
          required: true
          description: ID of the book
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Book deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "200"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "Book deleted successfully"
        '404':
          description: Book not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "404"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Book not found"

  /borrow_returns:
    get:
      tags:
        - Borrow_Return
      summary: ค้นหาข้อมูลการยืมและคืนหนังสือ
      operationId: getAllBorrowReturns
      responses:
        '200':
          description: List of borrow and return records
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "200"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "OK"
                  result:
                    type: object
                    properties:
                      pagination:
                        $ref: "#/components/schemas/pagination"
                      borrow_return:
                        type: array
                        items:
                          $ref: '#/components/schemas/BorrowReturn_details'


    post:
      tags:
        - Borrow_Return
      summary: เพิ่มข้อมูลการยืมและคืนหนังสือ
      operationId: addBorrowReturn
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                borrow_date:
                  type: string
                  format: date-time
                  example: "2024-12-01T10:00:00.000Z"
                return_date:
                  type: string
                  format: date-time
                  example: "2024-12-10T10:00:00.000Z"
                user_id:
                  type: integer
                  example: 1
                books_id:
                  type: integer
                  example: 1
      responses:
        '201':
          description: Borrow and return record created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "201"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "Borrow and return record created successfully"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "400"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Invalid input"

  /borrow_returns/{brId}:
    get:
      tags:
        - Borrow_Return
      summary: ค้นหาข้อมูลการคืนและยืมหนังสือจาก ID
      operationId: getBorrowReturnById
      parameters:
        - in: path
          name: brId
          required: true
          description: ID of the borrow and return record
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Borrow and return record details
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "200"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "OK"
                  result:
                    $ref: '#/components/schemas/BorrowReturn_details'
        '404':
          description: Borrow and return record not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "404"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Borrow and return record not found"

    put:
      tags:
        - Borrow_Return
      summary: อัปเดตข้อมูลการยืมและคืนหนังสือ
      operationId: updateBorrowReturn
      parameters:
        - in: path
          name: brId
          required: true
          description: ID of the borrow and return record
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                borrow_date:
                  type: string
                  format: date-time
                  example: "2024-12-01T10:00:00.000Z"
                return_date:
                  type: string
                  format: date-time
                  example: "2024-12-10T10:00:00.000Z"
                user_id:
                  type: integer
                  example: 1
                books_id:
                  type: integer
                  example: 1
      responses:
        '200':
          description: Borrow and return record updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "200"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "Borrow and return record updated successfully"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "400"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Invalid input"
        '404':
          description: Borrow and return record not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "404"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Borrow and return record not found"

    patch:
      tags:
        - Borrow_Return
      summary: อัปเดตข้อมูลการยืมและคืนหนังสือ (อัปเดตเฉพาะ status_flag)
      operationId: patchBorrowReturn
      parameters:
        - in: path
          name: brId
          required: true
          description: ID of the borrow and return record
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status_flag:
                  type: string
                  example: "INACTIVE"
              required:
                - status_flag
      responses:
        '200':
          description: Borrow_Return status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "200"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "Borrow_Return status updated successfully"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "400"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Invalid input"
        '404':
          description: Borrow and return record not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "404"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Borrow and return record not found"

    delete:
      tags:
        - Borrow_Return
      summary: ลบข้อมูลการยืมและคืนหนังสือ
      operationId: deleteBorrowReturn
      parameters:
        - in: path
          name: brId
          required: true
          description: ID of the borrow and return record
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Borrow and return record deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "200"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "Borrow and return record deleted successfully"
        '404':
          description: Borrow and return record not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "404"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Borrow and return record not found"


  /categories:
    get:
      tags:
        - Categories
      summary: ค้นหาข้อมูลหมวดหมู่หนังสือ
      operationId: getAllCategories
      responses:
        '200':
          description: List of categories
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "200"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "OK"
                  result:
                    type: object
                    properties:
                      pagination:
                        $ref: "#/components/schemas/pagination"
                      categories:
                        type: array
                        items:
                          $ref: '#/components/schemas/categories_details'

                      
        '404':
          description: No categories found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "404"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Categories not found"


    post:
      tags:
        - Categories
      summary: เพิ่มข้อมูลหมวดหมู่หนังสือ
      operationId: addcategories
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  maxLength: 10
                  example: "5984394"
                name_th:
                  type: string
                  maxLength: 255
                  example: "การศึกษา"
                name_en:
                  type: string
                  maxLength: 255
                  example: "Education"



      responses:
        '201':
          description: categories created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "201"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "categories created successfully"
                  result:
                    $ref: '#/components/schemas/categories_details'
        '400':
          description: Bad request, invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "400"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Invalid input data"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "500"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Internal server error"


  /categories/{categoriesId}:
    get:
      tags:
        - Categories
      summary: ค้นหาข้อมูลหมวดหมู่หนังสือจาก ID
      operationId: getcategoriesById
      parameters:
        - in: path
          name: categoriesId
          required: true
          description: ID of the categories
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Get categories by ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "200"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "OK"
                  result:
                    $ref: '#/components/schemas/categories_details'
        '404':
          description: categories not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "404"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "categories not found"
    put:
      tags:
        - Categories
      summary: อัปเดตข้อมูลหมวดหมู่หนังสือ
      operationId: updatecategories
      parameters:
        - in: path
          name: categoriesId
          required: true
          description: ID of the categories to update
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  maxLength: 10
                  example: "5984394"
                name_th:
                  type: string
                  maxLength: 255
                  example: "การศึกษา"
                name_en:
                  type: string
                  maxLength: 255
                  example: "Education"


      responses:
        '200':
          description: categories updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "200"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "categories updated successfully"
                  result:
                    $ref: '#/components/schemas/categories'
        '400':
          description: Bad request, invalid input data
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "400"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Invalid input data"
        '404':
          description: categories not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "404"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string 
                    example: "categories not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "500"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Internal server error"

    patch:
      tags:
        - Categories
      summary: อัปเดตข้อมูลหมวดหมู่หนังสือ (อัปเดตเฉพาะ status_flag)
      operationId: patchcategories
      parameters:
        - in: path
          name: categoriesId
          required: true
          description: ID of the categories to update
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status_flag:
                  type: string
                  example: "INACTIVE"
              required:
                - status_flag
      responses:
        '200':
          description: categories status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "200"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "categories status updated successfully"

    delete:
      tags:
        - Categories
      summary: ลบข้อมูลหมวดหมู่หนังสือจาก ID
      operationId: deletecategories
      parameters:
        - in: path
          name: categoriesId
          required: true
          description: ID of the categories to delete
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: categories deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "200"
                  status:
                    type: string
                    example: "SUCCESS"
                  message:
                    type: string
                    example: "categories deleted successfully"
        '404':
          description: categories not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "404"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "categories not found"
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: "500"
                  status:
                    type: string
                    example: "ERROR"
                  message:
                    type: string
                    example: "Internal server error"



components:
  schemas:
    Books_details:
      allOf:
        - $ref: '#/components/schemas/Book'
        - type: object
          properties:
            flag:
              $ref: '#/components/schemas/Flag'
            operation:
              $ref: '#/components/schemas/Operation'

    fine_details:
      type: object
      allOf:
        - $ref: '#/components/schemas/fine'
        - type: object
          properties:
            flag:
              $ref: '#/components/schemas/Flag'
            operation:
              $ref: '#/components/schemas/Operation'

    author_details:
      type: object
      allOf:
        - $ref: '#/components/schemas/author'
        - type: object
          properties:
            flag:
              $ref: '#/components/schemas/Flag'
            operation:
              $ref: '#/components/schemas/Operation'

    type_details:
      type: object
      allOf:
        - $ref: '#/components/schemas/type'
        - type: object
          properties:
            flag:
              $ref: '#/components/schemas/Flag'
            operation:
              $ref: '#/components/schemas/Operation'


    categories_details:
      type: object
      allOf:
        - $ref: '#/components/schemas/categories'
        - type: object
          properties:
            flag:
              $ref: '#/components/schemas/Flag'
            operation:
              $ref: '#/components/schemas/Operation'

    BorrowReturn_details:
      type: object
      allOf:
        - $ref: '#/components/schemas/BorrowReturn'
        - type: object
          properties:
            flag:
              $ref: '#/components/schemas/Flag'
            operation:
              $ref: '#/components/schemas/Operation'

    BorrowReturn:
      type: object
      properties:
        br_id:
          type: integer
          example: 1
        borrow_date:
          type: string
          format: date-time
          example: "2024-12-01T10:00:00.000Z"
        return_date:
          type: string
          format: date-time
          example: "2024-12-10T10:00:00.000Z"
        user_id:
          type: integer
          example: 1
        books_id:
          type: integer
          example: 1

    categories:
      type: object
      properties:
        categories_id:
          type: integer
          example: 1
        code:
          type: string
          maxLength: 10
          example: "C5984394"
        name_th:
          type: string
          maxLength: 255
          example: "การศึกษา"
        name_en:
          type: string
          maxLength: 255
          example: "Education"



    type:
      type: object
      properties:
        type_id:
          type: integer
          example: 1
        code:
          type: string
          maxLength: 10
          example: "T001"
        name_th:
          type: string
          maxLength: 255
          example: "การยืม 12 วัน"
        name_en:
          type: string
          maxLength: 255
          example: "Borrow 12 Days"
        duration:
          type: integer
          example: 12

    pagination:
      type: object
      properties:
        total_items:
          type: integer
          example: 5
        total_page:
          type: integer
          example: 2


    Flag:
      type: object
      properties:
        visible_flag:
          type: boolean
          example: visible
        status_flag:
          type: string
          example: "ACTIVE"
        status_modified_date:
          type: string
          format: date-time
          example: "2024-12-19T10:07:49.399Z"

    Operation:
      type: object
      properties:
        created_by:
          type: string
          example: "System"
        created_date:
          type: string
          format: date-time
          example: "2024-12-09T04:45:05.720Z"
        updated_by:
          type: string
          nullable: true
          example: null
        updated_date:
          type: string
          format: date-time
          example: null


    author:
      type: object
      properties:
        author_id:
          type: integer
          example: 1
        name_th:
          type: string
          maxLength: 255
          example: "สมชาย"
        name_en:
          type: string
          maxLength: 255
          example: "Somchai"
        alias:
          type: string
          maxLength: 255
          example: "somchai123"

    fine:
      type: object
      properties:
        fine_id:
          type: integer
          example: 1
        values:
          type: integer
          example: 50
        br_id:
          type: integer
          example: 123

    Book:
      type: object
      properties:
        book_id:
          type: integer
          example: 1
        code:
          type: string
          maxLength: 10
          example: "BOOK1234"
        no:
          type: integer
          example: 1
        name_th:
          type: string
          maxLength: 255
          example: "การเขียนโปรแกรม"
        name_en:
          type: string
          maxLength: 255
          example: "Programming"
        edition:
          type: integer
          example: 2
        description:
          type: string
          example: "หนังสือเกี่ยวกับการเขียนโปรแกรม"
        abstract:
          type: string
          example: "เป็นหนังสือที่เกี่ยวข้องกับพื้นฐานการเขียนโปรแกรม"
        printerty:
          type: string
          example: "Printer A"
        prinerty_date:
          type: string
          format: date-time
          example: "2024-12-01T00:00:00.000Z"
        maintenanced_date:
          type: string
          format: date-time
          example: "2024-12-10T00:00:00.000Z"
        maintenanced_by:
          type: string
          example: "Admin"    
        type_id:
          type: integer
          example: 1
        author_id:
          type: integer
          example: 1
        author:
          type: string
          example: {name_th:สมชายย , name_en:Somchai , alias:somchai123}
        categories:
          type: string
          example: {categories_id:1 , code:C569304 , name_th:การศึกษา , name_en:Education}
        borrow:
            type: string
            example: {id:1 ,firstname:ยิ่งยง , lastname:ยิ่งยอด , email:11242@gmail.com}
